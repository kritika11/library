c
book
c
Book.all.each{|book|book.available=true}.each{|b| b.save}
Book.all
@books
c
params[:search]
n
@books
c
book
@book
@issue
c
book
c
params
c
@books
c
f
c
book_name["issueDate"]
issue_params
format.html
format
c
issue_params
c
issue_params
c
@issue
c
request.path.include?('new')
request.path
request.original_url
request.path
request
c
params
c
cc
c
issue.id
c
issue
c
issue
c
n
@issue
n
c
params
n
@issue
n
c
@issue
c
params[:commit]
params[:issue_detail]["book_name"]
params[:issue_detail]
params[:issue_details]
params[:book_id]
params
issue_params
c
book.available=false
book.available
book
book=Book.find(params[:book_id])
Book.find(params[:book_id])
params[:book_id]
params
c
issue.book.book_name
issue.book
issue
c
issue_params
c
issue_params
c
issue_params
c
issue_params
c
issue_params
params
c
@issue
c
n
c
@issue
c
Book.find(@book_id)
get_book_name(@book_id)
c
@issue
c@issue
c
params
params[:book_id]
Book.find(params[:book_id])
c
quit
c
continue
c
byebug
continue
c
['sign_in'].map{|n| request.original_url.include?(n)}
['sign_in'].include?(request.original_url)
['sign'].include?(request.original_url)
request.original_url
 check_current_page(request.original_url)
 ['sign_in'].map{|n| path.include?(path)}.include?(true) ? false : true
c
['sig_in','/'].include?(path) ? false : true
['sign_in','/'].include?(path) ? false : true
['sign_in'].include?(path) ? false : true
['sign_in'].map{|n| path.include?(path)}.include?(true)
['sign_in'].map{|n| path.include?(path)}
['sign_up','sign_in'].map{|n| path.include?(path)}
['sign_up','sign_in'].map{|n| n.include?(path)}
['sign_up','sign_in'].map{|n| n.include?(path)}.
['sign_up','sign_in'].map{|n| n.include?(n)}
}.include?(path) 
c
request.fullpath
request.path
c
request.path
c
request.original_url
